{"version":3,"sources":["store/actions/actionTypes.js","hoc/Aux/Aux.js","store/actions/burgerBuilder.js","store/actions/order.js","store/actions/auth.js","components/Burger/BurgerIngredient/BurgerIngredient.module.css","axios-orders.js","components/UI/Spinner/Spinner.js","components/Navigation/SideDrawer/SideDrawer.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/UI/Backdrop/Backdrop.js","components/UI/Modal/Modal.js","components/Navigation/Toolbar/Toolbar.module.css","components/UI/Modal/Modal.module.css","components/UI/Button/Button.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/Burger/BuildControls/BuildControls.module.css","components/UI/Button/Button.module.css","hoc/withErrorHandler/withErrorHandler.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","hoc/Layout/Layout.module.css","components/Navigation/Toolbar/Toggler/Toggler.module.css","assets/images/burger-logo.png","components/Logo/Logo.module.css","components/Navigation/NavigationItems/NavigationItems.module.css","components/UI/Backdrop/Backdrop.module.css","components/Burger/Burger.module.css","components/UI/Spinner/Spinner.module.css","store/reducers/burgerBuilder.js","store/reducers/order.js","store/reducers/auth.js","components/Navigation/Toolbar/Toggler/Toggler.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/Toolbar/Toolbar.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/Burger/Order/OrderSummary/OrderSummary.js","containers/BurgerBuilder/BurgerBuilder.js","containers/Auth/Logout/Logout.js","App.js","serviceWorker.js","index.js"],"names":["AUTH_START","AUTH_SUCCESS","AUTH_FAIL","AUTH_LOGOUT","AUTH_SET_REDIRECT_PATH","ADD_INGREDIENT","REMOVE_INGREDIENT","SET_INGREDIENTS","FETCH_INGREDIENTS_FAILED","PURCHASE_BURGER_INIT","PURCHASE_BURGER_START","PURCHASE_BURGER_SUCCESS","PURCHASE_BURGER_FAIL","FETCH_ORDERS_START","FETCH_ORDERS_SUCCESS","FETCH_ORDERS_FAIL","aux","props","children","addIngredient","name","type","actionTypes","ingredientName","removeIngredient","setIngredients","ingredients","getIngredients","dispatch","a","axios","get","request","data","purchaseBurgerInit","purchaseBurgerSuccess","id","orderData","purchaseBurger","token","post","response","orderId","error","fetchOrdersSuccess","orders","fetchOrders","userId","queryParams","order","fetchedOrders","push","API_KEY","authSuccess","authData","logout","localStorage","removeItem","checkTokenTimeout","expirationTime","setTimeout","auth","email","password","isSignup","returnSecureToken","url","expirationDate","Date","getTime","expiresIn","setItem","idToken","localId","authSetRedirectPath","path","checkAuthState","getItem","expirationCalculation","module","exports","instance","create","baseURL","spinner","className","classes","Loader","backdrop","show","Backdrop","onClick","click","Modal","nextProps","nextState","this","modalClasses","Show","Hide","join","closeModal","Component","button","disabled","Button","btnType","withErrorHandler","WrappedComponent","state","errorConfirmHandler","setState","reqInterceptor","interceptors","use","req","resInterceptor","eject","message","burgerIngredient","ingredient","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","burger","Object","keys","map","Array","_","i","BurgerIngredient","key","reduce","arr","el","concat","length","Burger","initialState","totalPrice","building","INGREDIENTS_PRICES","salad","bacon","cheese","meat","reducer","action","loading","purchased","orderReducer","newOrder","redirectPath","authStart","authFail","authLogout","toggler","Toggler","logo","Logo","src","burgerLogo","alt","navigationItem","NavItem","to","link","activeClassName","active","exact","navigationItems","authLink","NavigationItem","ordersLink","isAuth","NavigationItems","toolbar","Toolbar","toggleSideDrawer","sideDrawer","sideDrawerClasses","SideDrawer","showBackdrop","Open","Close","Aux","Layout","showSideDrawer","toggleSideDrawerHandler","prevState","Content","connect","buildControl","BuildControl","Label","label","Less","remove","More","add","controls","buildControls","BuildControls","price","toFixed","ctrl","OrderButton","orderNow","purchasable","orderSummary","ingredientsSummary","ing","cancelPurchase","continuePurchase","BurgerBuilder","purchasing","purchaseHandler","onSetAuthRedirectPath","history","purchaseCancelHandler","purchaseContinueHandler","onInitPurchase","onInitIngredients","sum","burgerAndBuildControls","Spinner","onIngredientAdded","onIngredientRemoved","updatePurchasableState","OrderSummary","burgerBuilder","actions","Logout","onLogout","LazyCheckout","React","lazy","LazyOrders","LazyAuth","Checkout","fallback","Orders","Auth","App","onTryAutoSignup","routes","render","component","withRouter","Boolean","window","location","hostname","match","composeEnhancers","compose","rootReducer","combineReducers","burgerBuilderReducer","authReducer","store","createStore","applyMiddleware","thunk","app","StrictMode","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"8HAAA,giBACO,IAAMA,EAAa,aACbC,EAAe,eACfC,EAAY,YACZC,EAAc,cACdC,EAAyB,yBAGzBC,EAAiB,iBACjBC,EAAoB,oBACpBC,EAAkB,kBAClBC,EAA2B,2BAI3BC,EAAuB,uBACvBC,EAAwB,wBACxBC,EAA0B,0BAC1BC,EAAuB,uBAGvBC,EAAqB,qBACrBC,EAAuB,uBACvBC,EAAoB,qB,iCCrBlBC,IAFH,SAAAC,GAAK,OAAIA,EAAMC,W,saCGdC,EAAgB,SAAAC,GACzB,MAAO,CACHC,KAAMC,IACNC,eAAgBH,IAIXI,EAAmB,SAAAJ,GAC5B,MAAO,CACTC,KAAMC,IACNC,eAAgBH,IAIZK,EAAiB,SAAAC,GACnB,MAAO,CACHL,KAAMC,IACNI,YAAaA,IAURC,EAAiB,WAC1B,8CAAO,WAAMC,GAAN,iBAAAC,EAAA,+EAEuBC,IAAMC,IAAI,sEAFjC,OAEOC,EAFP,OAGON,EAAcM,EAAQC,KAC5BL,EAASH,EAAeC,IAJzB,gDAMCE,EAZD,CACHP,KAAMC,MAKH,yDAAP,uD,OC5BSY,EAAqB,WAC9B,MAAO,CACHb,KAAMC,MAIRa,EAAwB,SAACC,EAAIC,GAC/B,MAAO,CACHhB,KAAMC,IACNc,GAAIA,EACJC,UAAWA,IAiBNC,EAAiB,SAACD,EAAWE,GACtC,8CAAO,WAAMX,GAAN,iBAAAC,EAAA,6DACHD,EAPG,CACHP,KAAMC,MAKH,kBAGwBQ,IAAMU,KAAN,4BAAgCD,GAASF,GAHjE,OAGOI,EAHP,OAIOC,EAAUD,EAASR,KAAKb,KACvCQ,EAASO,EAAsBO,EAASL,IALhC,gDAORT,GArBwBe,EAqBI,EAAD,GApBnB,CACHtB,KAAMC,IACNqB,MAAOA,KAWJ,kCAdgB,IAAAA,IAchB,oBAAP,uDAkBEC,EAAqB,SAAAC,GACvB,MAAO,CACHxB,KAAMC,IACNuB,OAAQA,IAWHC,EAAc,SAACP,EAAOQ,GAC/B,8CAAO,WAAMnB,GAAN,uBAAAC,EAAA,6DACHD,EArBG,CACHP,KAAMC,MAmBH,SAGO0B,EAHP,eAG6BT,EAH7B,sCAGgEQ,EAHhE,cAIuBjB,IAAMC,IAAN,uBAA0BiB,IAJjD,OAOC,IAAWC,KAHLjB,EAJP,OAKOkB,EAAgBlB,EAAQC,KACxBY,EAAS,GACKK,EAChBL,EAAOM,KAAP,2BACOD,EAAcD,IADrB,IAEIb,GAAIa,KAGZrB,EAASgB,EAAmBC,IAb7B,kDAeCjB,GAvBYe,EAuBa,EAAD,GAtBzB,CACHtB,KAAMC,IACNqB,MAAOA,KAKJ,kCARa,IAAAA,IAQb,qBAAP,uD,iBC7DES,EAAU,0CAQVC,EAAc,SAAAC,GAChB,MAAO,CACHjC,KAAMC,IACNgC,SAAUA,IAWLC,EAAS,WAIlB,OAHAC,aAAaC,WAAW,SACxBD,aAAaC,WAAW,UACxBD,aAAaC,WAAW,kBACjB,CACHpC,KAAMC,MAIRoC,EAAoB,SAAAC,GACtB,OAAO,SAAA/B,GACHgC,YAAW,WACPhC,EAAS2B,OACO,IAAjBI,KAIEE,EAAO,SAACC,EAAOC,EAAUC,GAClC,8CAAO,WAAMpC,GAAN,qBAAAC,EAAA,6DACHD,EAtCG,CACHP,KAAMC,MAsCAgC,EAAW,CACtBQ,MAAOA,EACPC,SAAUA,EACVE,mBAAmB,GAEVC,EAPD,wEAOwEd,GACtEY,IAAUE,EAAG,oFAAgFd,IAR/F,kBAUuBtB,IAAMU,KAAK0B,EAAKZ,GAVvC,OAUOtB,EAVP,OAWOmC,EAAiB,IAAIC,MAAK,IAAIA,MAAOC,UAAqC,IAAzBrC,EAAQC,KAAKqC,WACpEd,aAAae,QAAQ,QAASvC,EAAQC,KAAKuC,SAC3ChB,aAAae,QAAQ,SAAUvC,EAAQC,KAAKwC,SAC5CjB,aAAae,QAAQ,iBAAkBJ,GACvCvC,EAASyB,EAAYrB,EAAQC,OAC7BL,EAAS8B,EAAkB1B,EAAQC,KAAKqC,YAhBzC,kDAkBC1C,GA3CKe,EA2Ca,KAAMF,SAASR,KAAKU,MA1CvC,CACHtB,KAAMC,IACNqB,MAAOA,KAsBJ,kCAzBM,IAAAA,IAyBN,qBAAP,uDAuBS+B,EAAsB,SAAAC,GAC/B,MAAO,CACHtD,KAAMC,IACNqD,KAAMA,IAIDC,EAAiB,WAC1B,OAAO,SAAAhD,GACH,IAAMW,EAAQiB,aAAaqB,QAAQ,SACnC,GAAKtC,EAEE,CACH,IAAMoB,EAAiB,IAAIS,KAAKZ,aAAaqB,QAAQ,mBACrD,GAAIlB,GAAkB,IAAIS,KACtBxC,EAAS2B,SACN,CACH,IAAMD,EAAW,CACbkB,QAASjC,EACTkC,QAASjB,aAAaqB,QAAQ,UAC9BP,UAAWX,GAETmB,GAAyBnB,EAAeU,WAAY,IAAID,MAAOC,WAAa,IAClFzC,EAASyB,EAAYC,IACrB1B,EAAS8B,EAAkBoB,UAb/BlD,EAAS2B,Q,gBC5ErBwB,EAAOC,QAAU,CAAC,YAAc,sCAAsC,SAAW,mCAAmC,OAAS,iCAAiC,OAAS,iCAAiC,KAAO,+BAA+B,OAAS,iCAAiC,MAAQ,gCAAgC,MAAQ,kC,6BCDxU,YAEMC,EAFN,OAEiBnD,EAAMoD,OAAO,CAC7BC,QAAS,uDAGKF,O,gCCNf,qCAKeG,IAFC,kBAAM,yBAAKC,UAAWC,IAAQC,QAAxB,gB,mBCFtBR,EAAOC,QAAU,CAAC,WAAa,+BAA+B,KAAO,yBAAyB,KAAO,yBAAyB,MAAQ,4B,gBCAtID,EAAOC,QAAU,CAAC,aAAe,mCAAmC,MAAQ,4BAA4B,KAAO,2BAA2B,KAAO,6B,gCCDjJ,qCAMeQ,IAFE,SAAAvE,GAAK,OAAIA,EAAMwE,KAAO,yBAAKJ,UAAWC,IAAQI,SAAUC,QAAS1E,EAAM2E,QAAgB,O,iHCElGC,E,oLACoBC,EAAWC,GAC7B,OAAOD,EAAUL,OAASO,KAAK/E,MAAMwE,MAAQK,EAAU5E,WAAa8E,KAAK/E,MAAMC,W,+BAI/E,IAAM+E,EAAe,CAACX,IAAQO,OAO9B,OANFG,KAAK/E,MAAMwE,KACdQ,EAAa9C,KAAKmC,IAAQY,MAE1BD,EAAa9C,KAAKmC,IAAQa,MAIjB,kBAAC,IAAD,KACI,yBAAKd,UAAWY,EAAaG,KAAK,MAC7BJ,KAAK/E,MAAMC,UAEhB,kBAAC,IAAD,CAAUuE,KAAMO,KAAK/E,MAAMwE,KAAMG,MAAOI,KAAK/E,MAAMoF,kB,GAlB/CC,aAwBLT,O,gBC7Bfd,EAAOC,QAAU,CAAC,QAAU,yBAAyB,KAAO,sBAAsB,QAAU,2B,gBCA5FD,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,KAAO,oBAAoB,KAAO,sB,6BCDjF,qCAaeuB,IATA,SAAAtF,GAAK,OACnB,4BACOuF,SAAUvF,EAAMuF,SACtBb,QAAS1E,EAAM2E,MACfP,UAAW,CAACC,IAAQmB,OAAQnB,IAAQrE,EAAMyF,UAAUN,KAAK,MACxDnF,EAAMC,Y,kBCRT6D,EAAOC,QAAU,CAAC,QAAU,gCAAgC,OAAS,iC,kBCArED,EAAOC,QAAU,CAAC,cAAgB,qCAAqC,YAAc,mCAAmC,OAAS,gC,gBCAjID,EAAOC,QAAU,CAAC,OAAS,uBAAuB,QAAU,wBAAwB,OAAS,yB,gGC0C9E2B,IAtCU,SAACC,EAAkB9E,GACxC,mNACI+E,MAAQ,CACJlE,MAAO,MAFf,EAoBImE,oBAAsB,kBAAM,EAAKC,SAAS,CAAEpE,MAAO,QApBvD,mEAK0B,IAAD,OACjBqD,KAAKgB,eAAiBlF,EAAMmF,aAAajF,QAAQkF,KAAI,SAAAC,GAEjD,OADA,EAAKJ,SAAS,CAAEpE,MAAO,OAChBwE,KAEXnB,KAAKoB,eAAiBtF,EAAMmF,aAAaxE,SAASyE,KAAI,SAAAC,GAAG,OAAIA,KAAK,SAAAxE,GAC9D,EAAKoE,SAAS,CAAEpE,eAX5B,6CAgBQb,EAAMmF,aAAajF,QAAQqF,MAAMrB,KAAKgB,gBACtClF,EAAMmF,aAAaxE,SAAS4E,MAAMrB,KAAKoB,kBAjB/C,+BAuBQ,OACR,kBAAC,IAAD,KACC,kBAAC,IAAD,CACC3B,KAAMO,KAAKa,MAAMlE,MACjB0D,WAAYL,KAAKc,qBAChBd,KAAKa,MAAMlE,MAAQqD,KAAKa,MAAMlE,MAAM2E,QAAU,MAEhD,kBAACV,EAAqBZ,KAAK/E,YA9B5B,GAAqBqF,e,qGCqCViB,EAtCU,SAAAtG,GACrB,IAAIuG,EAAa,KAEjB,OAAQvG,EAAMI,MACV,IAAM,eACFmG,EAAa,yBAAKnC,UAAWC,IAAQmC,cACrC,MACJ,IAAM,YACFD,EACI,yBAAKnC,UAAWC,IAAQoC,UACpB,yBAAKrC,UAAWC,IAAQqC,SACxB,yBAAKtC,UAAWC,IAAQsC,UAGhC,MACJ,IAAM,OACFJ,EAAa,yBAAKnC,UAAWC,IAAQuC,OACrC,MACJ,IAAM,SACFL,EAAa,yBAAKnC,UAAWC,IAAQwC,SACrC,MACJ,IAAM,QACFN,EAAa,yBAAKnC,UAAWC,IAAQyC,QACrC,MACJ,IAAM,QACFP,EAAa,yBAAKnC,UAAWC,IAAQ0C,QACrC,MACJ,QACIR,EAAa,KAGrB,OAAOA,GCAIS,IA9BA,SAAAhH,GACX,IACIS,EADqBwG,OAAOC,KAAKlH,EAAMS,aAE5C0G,KAAI,SAAAZ,GACK,MAAmB,UAAfA,EACO,YAAIa,MAAMpH,EAAMS,YAAY8F,KAAcY,KAAI,SAACE,EAAGC,GACrD,OAAO,kBAACC,EAAD,CAAkBC,IAAKjB,EAAae,EAAGlH,KAAMmG,OAGrDA,KAEVkB,QAAO,SAACC,EAAKC,GAAN,OAAaD,EAAIE,OAAOD,KAAK,IAMzC,OAJ2B,IAAvBlH,EAAYoH,SACZpH,EAAc,gEAId,yBAAK2D,UAAWC,IAAQyD,QACpB,kBAACP,EAAD,CAAkBnH,KAAK,cACtBK,EACD,kBAAC8G,EAAD,CAAkBnH,KAAK,oB,kBC1BnC0D,EAAOC,QAAU,CAAC,QAAU,0B,gBCA5BD,EAAOC,QAAU,CAAC,QAAU,2B,gBCD5BD,EAAOC,QAAU,IAA0B,yC,gBCC3CD,EAAOC,QAAU,CAAC,KAAO,qB,gBCAzBD,EAAOC,QAAU,CAAC,gBAAkB,2C,gBCApCD,EAAOC,QAAU,CAAC,SAAW,6B,gBCA7BD,EAAOC,QAAU,CAAC,OAAS,yB,gBCA3BD,EAAOC,QAAU,CAAC,OAAS,wBAAwB,MAAQ,uBAAuB,MAAQ,yB,8MCCpFgE,EAAe,CACjBtH,YAAa,KACbuH,WAAY,KACZtG,OAAO,EACPuG,UAAU,GAGRC,EAAqB,CAC1BC,MAAO,GACPC,MAAO,GACPC,OAAQ,GACRC,KAAM,KAiDQC,EA9CC,WAAmC,IAAlC3C,EAAiC,uDAAzBmC,EAAcS,EAAW,uCAC9C,OAAQA,EAAOpI,MACX,KAAKC,IACD,OAAO,2BACAuF,GADP,IAGInF,YAAa,CACT0H,MAAOK,EAAO/H,YAAY0H,MAC1BC,MAAOI,EAAO/H,YAAY2H,MAC1BC,OAAQG,EAAO/H,YAAY4H,OAC3BC,KAAME,EAAO/H,YAAY6H,MAE7BN,WAAY,KACZtG,OAAO,EACPuG,UAAU,IAElB,KAAK5H,IACD,OAAO,2BACAuF,GADP,IAEIlE,OAAO,IAEf,KAAKrB,IACD,OAAO,2BACAuF,GADP,IAEInF,YAAY,2BACLmF,EAAMnF,aADF,kBAEN+H,EAAOlI,eAAiBsF,EAAMnF,YAAY+H,EAAOlI,gBAAkB,IAExE0H,WAAYpC,EAAMoC,WAAaE,EAAmBM,EAAOlI,gBACzD2H,UAAU,IAElB,KAAK5H,IACD,OAAO,2BACAuF,GADP,IAEInF,YAAY,2BACLmF,EAAMnF,aADF,kBAEN+H,EAAOlI,eAAiBsF,EAAMnF,YAAY+H,EAAOlI,gBAAkB,IAExE0H,WAAYpC,EAAMoC,WAAaE,EAAmBM,EAAOlI,gBACzD2H,UAAU,IAElB,QACI,OAAOrC,ICxDbmC,EAAe,CACjBnG,OAAQ,GACR6G,SAAS,EACTC,WAAW,GAoDAC,EAjDM,WAAmC,IAAlC/C,EAAiC,uDAAzBmC,EAAcS,EAAW,uCACnD,OAAQA,EAAOpI,MACX,KAAKC,IACD,OAAO,2BACAuF,GADP,IAEI8C,WAAW,IAEnB,KAAKrI,IACD,OAAO,2BACAuF,GADP,IAEI6C,SAAS,IAEjB,KAAKpI,IACD,IAAMuI,EAAQ,aACVzH,GAAIqH,EAAOrH,IACRqH,EAAOpH,WAEd,OAAO,2BACAwE,GADP,IAEIhE,OAAQgE,EAAMhE,OAAOgG,OAAOgB,GAC5BH,SAAS,EACTC,WAAW,IAEnB,KAAKrI,IACD,OAAO,2BACAuF,GADP,IAEI6C,SAAS,IAEjB,KAAKpI,IACD,OAAO,2BACAuF,GADP,IAEI6C,SAAS,IAEjB,KAAKpI,IACD,OAAO,2BACAuF,GADP,IAEIhE,OAAQ4G,EAAO5G,OACf6G,SAAS,IAEjB,KAAKpI,IACD,OAAO,2BACAuF,GADP,IAEI6C,SAAS,IAEjB,QACI,OAAO7C,ICnDbmC,EAAe,CACjBzG,MAAO,KACPQ,OAAQ,KACRJ,MAAO,KACP+G,SAAS,EACTI,aAAc,KAGZC,EAAY,SAAClD,EAAO4C,GACtB,OAAO,2BACA5C,GADP,IAEIlE,MAAO,KACP+G,SAAS,KAIXrG,EAAc,SAACwD,EAAO4C,GACxB,OAAO,2BACA5C,GADP,IAEItE,MAAOkH,EAAOnG,SAASkB,QACvBzB,OAAQ0G,EAAOnG,SAASmB,QACxB9B,MAAO,KACP+G,SAAS,KAIXM,EAAW,SAACnD,EAAO4C,GACrB,OAAO,2BACA5C,GADP,IAEIlE,MAAO8G,EAAO9G,MACd+G,SAAS,KAIXO,EAAa,SAACpD,EAAO4C,GACvB,kCACO5C,GADP,IAEItE,MAAO,KACPQ,OAAQ,KACRJ,MAAO,KACP+G,SAAS,KAIXhF,EAAsB,SAACmC,EAAO4C,GAChC,OAAO,2BACA5C,GADP,IAEIiD,aAAcL,EAAO9E,QAed6E,EAXC,WAAmC,IAAlC3C,EAAiC,uDAAzBmC,EAAcS,EAAW,uCAC9C,OAAQA,EAAOpI,MACX,KAAKC,IAAwB,OAAOyI,EAAUlD,GAC9C,KAAKvF,IAA0B,OAAO+B,EAAYwD,EAAO4C,GACzD,KAAKnI,IAAuB,OAAO0I,EAASnD,EAAO4C,GACnD,KAAKnI,IAAyB,OAAO2I,EAAWpD,GAChD,KAAKvF,IAAoC,OAAOoD,EAAoBmC,EAAO4C,GAC3E,QAAS,OAAO5C,I,iHChDTqD,EARC,SAAAjJ,GAAK,OACjB,yBAAKoE,UAAWC,IAAQ6E,QAASxE,QAAS1E,EAAM2E,OAC5C,+BACA,+BACA,iC,kCCGOwE,EANF,SAAAnJ,GAAK,OACd,yBAAKoE,UAAWC,IAAQ+E,MACpB,yBAAKC,IAAKC,IAAYC,IAAI,e,kCCOnBC,EATQ,SAAAxJ,GAAK,OACxB,wBAAIoE,UAAWC,IAAQoF,SACnB,kBAAC,IAAD,CACIC,GAAI1J,EAAM2J,KACVC,gBAAiBvF,IAAQwF,OACzBC,MAAO9J,EAAM8J,OAAQ9J,EAAMC,YCYxB8J,EAjBS,SAAA/J,GACpB,IAAIgK,EAAW,kBAACC,EAAD,CAAgBN,KAAK,SAArB,gBACXO,EAAa,KAMjB,OALIlK,EAAMmK,SACND,EAAa,kBAACD,EAAD,CAAgBN,KAAK,WAArB,aACbK,EAAW,kBAACC,EAAD,CAAgBN,KAAK,WAArB,WAIX,wBAAIvF,UAAWC,IAAQ+F,iBACnB,kBAACH,EAAD,CAAgBN,KAAK,IAAIG,OAAK,GAA9B,kBACCI,EACAF,ICIEK,EAdC,SAAArK,GAAK,OACpB,4BAAQoE,UAAWC,IAAQiG,SAC1B,yBAAKlG,UAAWC,IAAQ6E,SACvB,kBAACA,EAAD,CAASvE,MAAO3E,EAAMuK,oBAEvB,yBAAKnG,UAAWC,IAAQ+E,MACvB,kBAACA,EAAD,OAED,6BACC,kBAACgB,EAAD,CAAiBD,OAAQnK,EAAMmK,Y,0BCenBK,GAvBI,SAAAxK,GACf,IAAMyK,EAAoB,CAACpG,IAAQqG,YAOnC,OANI1K,EAAM2K,aACNF,EAAkBvI,KAAKmC,IAAQuG,MAE/BH,EAAkBvI,KAAKmC,IAAQwG,OAIrC,kBAACC,EAAA,EAAD,KACU,kBAACrG,GAAA,EAAD,CAAUD,KAAMxE,EAAM2K,aAAchG,MAAO3E,EAAMuK,mBAC1D,yBAAKnG,UAAWqG,EAAkBtF,KAAK,KAAMT,QAAS1E,EAAMuK,kBAC3D,yBAAKnG,UAAWC,IAAQ+E,MACvB,kBAACA,EAAD,OAED,6BACC,kBAACgB,EAAD,CAAiBD,OAAQnK,EAAMmK,aCd9BY,G,4MACFnF,MAAQ,CACJoF,gBAAgB,G,EAGpBC,wBAA0B,WACtB,EAAKnF,UAAS,SAAAoF,GACV,MAAO,CACHF,gBAAiBE,EAAUF,oB,uDAMnC,OACL,kBAACF,EAAA,EAAD,KACC,kBAACR,EAAD,CACgBH,OAAQpF,KAAK/E,MAAMmK,OACnBI,iBAAkBxF,KAAKkG,0BACvC,kBAACP,GAAD,CACgBP,OAAQpF,KAAK/E,MAAMmK,OACnBQ,aAAc5F,KAAKa,MAAMoF,eACzBT,iBAAkBxF,KAAKkG,0BACvC,0BAAM7G,UAAWC,IAAQ8G,SAAUpG,KAAK/E,MAAMC,e,GAvB7BoF,aAmCN+F,gBANS,SAAAxF,GACpB,MAAO,CACHuE,OAA6B,OAArBvE,EAAMhD,KAAKtB,SAIZ8J,CAAyBL,I,mEC5BzBM,GAZM,SAAArL,GAAK,OACtB,yBAAKoE,UAAWC,KAAQiH,cACpB,yBAAKlH,UAAWC,KAAQkH,OAAQvL,EAAMwL,OACtC,4BAAQpH,UAAWC,KAAQoH,KAAM/G,QAAS1E,EAAM0L,OAAQnG,SAAUvF,EAAMuF,UAAxE,QACA,4BAAQnB,UAAWC,KAAQsH,KAAMjH,QAAS1E,EAAM4L,KAAhD,UCJFC,GAAW,CACb,CAAEL,MAAO,QAASpL,KAAM,SACxB,CAAEoL,MAAO,QAASpL,KAAM,SACxB,CAAEoL,MAAO,SAAUpL,KAAM,UACzB,CAAEoL,MAAO,OAAQpL,KAAM,SAqBZ0L,GAlBO,SAAA9L,GAAK,OACvB,yBAAKoE,UAAWC,KAAQ0H,eACpB,6CAAkB,gCAAM/L,EAAMgM,MAAMC,QAAQ,KAC3CJ,GAAS1E,KAAI,SAAA+E,GAAI,OACd,kBAACZ,GAAD,CACI9D,IAAK0E,EAAKV,MACVA,MAAOU,EAAKV,MACZI,IAAK,kBAAM5L,EAAME,cAAcgM,EAAK9L,OACpCsL,OAAQ,kBAAM1L,EAAMO,iBAAiB2L,EAAK9L,OAC1CmF,SAAUvF,EAAMuF,SAAS2G,EAAK9L,WAEtC,4BACIgE,UAAWC,KAAQ8H,YACnBzH,QAAS1E,EAAMoM,SACf7G,UAAWvF,EAAMqM,aAAcrM,EAAMmK,OAAS,YAAc,sB,kBCCzDmC,GAtBM,SAAAtM,GACjB,IAAMuM,EAAqBtF,OAAOC,KAAKlH,EAAMS,aAAa0G,KAAI,SAAAqF,GAAG,OACnE,wBAAIhF,IAAKgF,GACR,8BAAOA,EAAP,KADD,IACsBxM,EAAMS,YAAY+L,OAItC,OACI,kBAAC1B,EAAA,EAAD,KACI,0CACA,iFACA,4BACKyB,GAEL,6CAAmBvM,EAAMgM,MAAMC,QAAQ,IACvC,mDACA,kBAACzG,GAAA,EAAD,CAAQC,QAAQ,SAASd,MAAO3E,EAAMyM,gBAAtC,UACA,kBAACjH,GAAA,EAAD,CAAQC,QAAQ,UAAUd,MAAO3E,EAAM0M,kBAAvC,c,SCNCC,GAAb,4MACC/G,MAAQ,CACDgH,YAAY,GAFpB,EAgBCC,gBAAkB,WACP,EAAK7M,MAAMmK,OACX,EAAKrE,SAAS,CAAE8G,YAAY,KAE5B,EAAK5M,MAAM8M,sBAAsB,aACjC,EAAK9M,MAAM+M,QAAQ7K,KAAK,WArBpC,EAyBI8K,sBAAwB,kBAAM,EAAKlH,SAAS,CAAE8G,YAAY,KAzB9D,EA2BIK,wBAA0B,WACtB,EAAKjN,MAAMkN,iBACX,EAAKlN,MAAM+M,QAAQ7K,KAAK,cA7BhC,kEAMQ6C,KAAK/E,MAAMmN,sBANnB,6CASwB1M,GAItB,OAHYwG,OAAOC,KAAKzG,GACtB0G,KAAI,SAAAqF,GAAG,OAAI/L,EAAY+L,MACvB/E,QAAO,SAAC2F,EAAKzF,GAAN,OAAayF,EAAMzF,IAAI,GACnB,IAbf,+BAiCE,IAAMlH,EAAW,eAAQsE,KAAK/E,MAAMS,aACpC,IAAK,IAAM+G,KAAO/G,EACjBA,EAAY+G,GAAO/G,EAAY+G,IAAQ,EAGlC,IAAI8E,EAAe,KACfe,EAAyB,kBAACC,GAAA,EAAD,MA4BnC,OA1BUvI,KAAK/E,MAAM0B,QACX2L,EAAyB,qDAEzBtI,KAAK/E,MAAMS,cACX4M,EACR,kBAACvC,EAAA,EAAD,KACC,kBAAChD,GAAA,EAAD,CAAQrH,YAAasE,KAAK/E,MAAMS,cAChC,kBAACsL,GAAD,CACCC,MAAOjH,KAAK/E,MAAMgI,WAClB9H,cAAe6E,KAAK/E,MAAMuN,kBAC1BhN,iBAAkBwE,KAAK/E,MAAMwN,oBAC7BjI,SAAU9E,EACQ2L,SAAUrH,KAAK8H,gBACf1C,OAAQpF,KAAK/E,MAAMmK,OACrCkC,YAAatH,KAAK0I,uBAAuB1I,KAAK/E,MAAMS,gBAG9C6L,EACR,kBAACoB,GAAD,CACCjB,eAAgB1H,KAAKiI,sBACrBN,iBAAkB3H,KAAKkI,wBACvBjB,MAAOjH,KAAK/E,MAAMgI,WAClBvH,YAAasE,KAAK/E,MAAMS,eAK1B,kBAACqK,EAAA,EAAD,KACC,kBAAClG,GAAA,EAAD,CACCJ,KAAMO,KAAKa,MAAMgH,WACjBxH,WAAYL,KAAKiI,uBAChBV,GAEWe,OA1EjB,GAAmChI,aAmGpB+F,gBAnBS,SAAAxF,GACpB,MAAO,CACHnF,YAAamF,EAAM+H,cAAclN,YACjCuH,WAAYpC,EAAM+H,cAAc3F,WAChCtG,MAAOkE,EAAM+H,cAAcjM,MAC3ByI,OAA6B,OAArBvE,EAAMhD,KAAKtB,UAIA,SAAAX,GACvB,MAAO,CACH4M,kBAAmB,SAAAjN,GAAc,OAAIK,EAASiN,IAAsBtN,KACpEkN,oBAAqB,SAAAlN,GAAc,OAAIK,EAASiN,IAAyBtN,KACzE6M,kBAAmB,kBAAMxM,EAASiN,QAClCV,eAAgB,kBAAMvM,EAASiN,QAC/Bd,sBAAuB,SAAApJ,GAAI,OAAI/C,EAASiN,IAA4BlK,QAI7D0H,CAA6C1F,aAAiBiH,GAAe9L,OC5GtFgN,G,kLAEE9I,KAAK/E,MAAM8N,a,+BAIX,OAAO,kBAAC,IAAD,CAAUpE,GAAG,U,GANPrE,aAgBN+F,eAAQ,MANI,SAAAzK,GACvB,MAAO,CACHmN,SAAU,kBAAMnN,EAASiN,WAIlBxC,CAAkCyC,ICX3CE,GAAeC,IAAMC,MAAK,kBAAM,iCAChCC,GAAaF,IAAMC,MAAK,kBAAM,iCAC9BE,GAAWH,IAAMC,MAAK,kBAAM,iCAE5BG,GAAW,kBACb,kBAAC,WAAD,CAAUC,SAAU,kBAACf,GAAA,EAAD,OAChB,kBAACS,GAAD,QAGFO,GAAS,kBACX,kBAAC,WAAD,CAAUD,SAAU,kBAACf,GAAA,EAAD,OAChB,kBAACY,GAAD,QAGFK,GAAO,kBACT,kBAAC,WAAD,CAAUF,SAAU,kBAACf,GAAA,EAAD,OAChB,kBAACa,GAAD,QAIFK,G,kLAEEzJ,KAAK/E,MAAMyO,oB,+BAIX,IAAIC,EACT,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAOhL,KAAK,QAAQiL,OAAQJ,KAC5B,kBAAC,IAAD,CAAO7K,KAAK,IAAIkL,UAAWjC,KAC3B,kBAAC,IAAD,CAAUjD,GAAG,OAgBT,OAbI3E,KAAK/E,MAAMmK,SACXuE,EACR,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAOhL,KAAK,YAAYiL,OAAQP,KAChC,kBAAC,IAAD,CAAO1K,KAAK,UAAUiL,OAAQL,KAC9B,kBAAC,IAAD,CAAO5K,KAAK,UAAUkL,UAAWf,KACjC,kBAAC,IAAD,CAAOnK,KAAK,QAAQiL,OAAQJ,KAC5B,kBAAC,IAAD,CAAO7K,KAAK,IAAIkL,UAAWjC,KAC3B,kBAAC,IAAD,CAAUjD,GAAG,QAMN,kBAAC,GAAD,KACKgF,O,GA5BCrJ,aA8CHwJ,eAAWzD,aAZF,SAAAxF,GACpB,MAAO,CACHuE,OAA6B,OAArBvE,EAAMhD,KAAKtB,UAIA,SAAAX,GACvB,MAAO,CACH8N,gBAAiB,kBAAM9N,EAASiN,WAIdxC,CAA6CoD,KClEnDM,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCFN,IAAMC,GAAkHC,IAElHC,GAAcC,YAAgB,CAChC3B,cAAe4B,EACfvN,MAAO2G,EACP/F,KAAM4M,IAGJC,GAAQC,YAAYL,GAAaF,GACnCQ,YAAgBC,OAGdC,GACL,kBAAC,IAAD,CAAUJ,MAAOA,IAChB,kBAAC,IAAMK,WAAP,KACC,kBAAC,IAAD,KACC,kBAAC,GAAD,SAMJC,IAASpB,OAAOkB,GAAKG,SAASC,eAAe,SD6FvC,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAA9O,GACL+O,QAAQ/O,MAAMA,EAAM2E,c","file":"static/js/main.c9162b20.chunk.js","sourcesContent":["// Auth\nexport const AUTH_START = 'AUTH_START';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const AUTH_FAIL = 'AUTH_FAIL';\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\nexport const AUTH_SET_REDIRECT_PATH = 'AUTH_SET_REDIRECT_PATH';\n\n// Burger\nexport const ADD_INGREDIENT = 'ADD_INGREDIENT';\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\nexport const SET_INGREDIENTS = 'SET_INGREDIENTS';\nexport const FETCH_INGREDIENTS_FAILED = 'FETCH_INGREDIENTS_FAILED';\n\n// Orders\n// -- Purchase\nexport const PURCHASE_BURGER_INIT = 'PURCHASE_BURGER_INIT';\nexport const PURCHASE_BURGER_START = 'PURCHASE_BURGER_START';\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS';\nexport const PURCHASE_BURGER_FAIL = 'PURCHASE_BURGER_FAIL';\n\n// -- Get orderds\nexport const FETCH_ORDERS_START = 'FETCH_ORDERS_START';\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDERS_SUCCESS';\nexport const FETCH_ORDERS_FAIL = 'FETCH_ORDERS_FAIL';","const aux = props => props.children;\n\nexport default aux;","import * as actionTypes from './actionTypes';\nimport axios from '../../axios-orders';\n\nexport const addIngredient = name => {\n    return {\n        type: actionTypes.ADD_INGREDIENT,\n        ingredientName: name\n    };\n};\n\nexport const removeIngredient = name => {\n    return {\n\t\ttype: actionTypes.REMOVE_INGREDIENT,\n\t\tingredientName: name\n\t};\n};\n\nconst setIngredients = ingredients => {\n    return {\n        type: actionTypes.SET_INGREDIENTS,\n        ingredients: ingredients\n    }\n};\n\nconst fetchIngredientsFailed = () => {\n    return {\n        type: actionTypes.FETCH_INGREDIENTS_FAILED\n    };\n};\n\nexport const getIngredients = () => {\n    return async dispatch => {\n        try {\n            const request = await axios.get('https://react-burger-builder-4276d.firebaseio.com/ingredients.json');\n            const ingredients = request.data;\n            dispatch(setIngredients(ingredients));\n        } catch(error) {\n            dispatch(fetchIngredientsFailed());\n        }\n    };\n};","import * as actionTypes from './actionTypes';\nimport axios from '../../axios-orders';\n\nexport const purchaseBurgerInit = () => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_INIT\n    }\n};\n\nconst purchaseBurgerSuccess = (id, orderData) => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_SUCCESS,\n        id: id,\n        orderData: orderData\n    };\n};\n\nconst purchaseBurgerFail = error => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_FAIL,\n        error: error\n    };\n};\n\nconst purchaseBurgerStart = () => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_START\n    }\n};\n\nexport const purchaseBurger = (orderData, token) => {\n    return async dispatch => {\n        dispatch(purchaseBurgerStart());\n        try {\n            const response = await axios.post(`/orders.json?auth=${token}`, orderData);\n            const orderId = response.data.name;\n\t\t\tdispatch(purchaseBurgerSuccess(orderId, orderData));\n\t\t} catch (error) {\n\t\t\tdispatch(purchaseBurgerFail(error));\n\t\t}\n    };\n};\n\nconst fetchOrdersStart = () => {\n    return {\n        type: actionTypes.FETCH_ORDERS_START\n    }\n};\n\nconst fetchOrdersSuccess = orders => {\n    return {\n        type: actionTypes.FETCH_ORDERS_SUCCESS,\n        orders: orders\n    }\n};\n\nconst fetchOrdersFail = error => {\n    return {\n        type: actionTypes.FETCH_ORDERS_FAIL,\n        error: error\n    }\n};\n\nexport const fetchOrders = (token, userId) => {\n    return async dispatch => {\n        dispatch(fetchOrdersStart());\n        try {\n            const queryParams = `auth=${token}&orderBy=\"userId\"&equalTo=\"${userId}\"`;\n            const request = await axios.get(`/orders.json?${queryParams}`);\n            const fetchedOrders = request.data;\n            const orders = [];\n            for (const order in fetchedOrders) {\n                orders.push({\n                    ...fetchedOrders[order],\n                    id: order\n                });\n            }\n            dispatch(fetchOrdersSuccess(orders));\n        } catch (error) {\n            dispatch(fetchOrdersFail(error));\n        }\n    };\n};","import axios from 'axios';\nimport * as actionTypes from './actionTypes';\n\nconst API_KEY = 'AIzaSyCcUzmP42rsup9vmFfKr4jYCdfo_wn2hBo';\n\nconst authStart = () => {\n    return {\n        type: actionTypes.AUTH_START\n    };\n};\n\nconst authSuccess = authData => {\n    return {\n        type: actionTypes.AUTH_SUCCESS,\n        authData: authData\n    };\n};\n\nconst authFail = error => {\n    return {\n        type: actionTypes.AUTH_FAIL,\n        error: error\n    };\n};\n\nexport const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('userId');\n    localStorage.removeItem('expirationTime');\n    return {\n        type: actionTypes.AUTH_LOGOUT\n    };\n};\n\nconst checkTokenTimeout = expirationTime => {\n    return dispatch => {\n        setTimeout(() => {\n            dispatch(logout());\n        }, expirationTime * 1000);\n    };\n};\n\nexport const auth = (email, password, isSignup) => {\n    return async dispatch => {\n        dispatch(authStart());\n        const authData = {\n\t\t\temail: email,\n\t\t\tpassword: password,\n\t\t\treturnSecureToken: true\n        };\n        let url = `https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=${API_KEY}`;\n        if (!isSignup) url = `https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=${API_KEY}`;\n        try {\n            const request = await axios.post(url, authData);\n            const expirationDate = new Date(new Date().getTime() + request.data.expiresIn * 1000);\n            localStorage.setItem('token', request.data.idToken);\n            localStorage.setItem('userId', request.data.localId);\n            localStorage.setItem('expirationTime', expirationDate);\n            dispatch(authSuccess(request.data));\n            dispatch(checkTokenTimeout(request.data.expiresIn))\n        } catch (error) {\n            dispatch(authFail(error.response.data.error));\n        }\n    };\n};\n\nexport const authSetRedirectPath = path => {\n    return {\n        type: actionTypes.AUTH_SET_REDIRECT_PATH,\n        path: path\n    };\n};\n\nexport const checkAuthState = () => {\n    return dispatch => {\n        const token = localStorage.getItem('token');\n        if (!token) {\n            dispatch(logout());\n        } else {\n            const expirationTime = new Date(localStorage.getItem('expirationTime'));\n            if (expirationTime <= new Date()) {\n                dispatch(logout());\n            } else {\n                const authData = {\n                    idToken: token,\n                    localId: localStorage.getItem('userId'),\n                    expiresIn: expirationTime\n                };\n                const expirationCalculation = (expirationTime.getTime() - new Date().getTime()) / 1000;\n                dispatch(authSuccess(authData));\n                dispatch(checkTokenTimeout(expirationCalculation));\n            }\n        }\n    };\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__2US69\",\"BreadTop\":\"BurgerIngredient_BreadTop__3Y4-R\",\"Seeds1\":\"BurgerIngredient_Seeds1__J6vUJ\",\"Seeds2\":\"BurgerIngredient_Seeds2__2Ylex\",\"Meat\":\"BurgerIngredient_Meat__3flwI\",\"Cheese\":\"BurgerIngredient_Cheese__3rOTJ\",\"Salad\":\"BurgerIngredient_Salad__KLnhy\",\"Bacon\":\"BurgerIngredient_Bacon__1KK6n\"};","import axios from 'axios';\n\nconst instance = axios.create({\n\tbaseURL: 'https://react-burger-builder-4276d.firebaseio.com/'\n});\n\nexport default instance;","import React from 'react';\nimport classes from './Spinner.module.css';\n\nconst spinner = () => <div className={classes.Loader}>Loading...</div>;\n\nexport default spinner;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__3kXLK\",\"Logo\":\"SideDrawer_Logo__3voUv\",\"Open\":\"SideDrawer_Open__1tCv1\",\"Close\":\"SideDrawer_Close__9j7x-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__O8649\",\"Label\":\"BuildControl_Label__TQkTk\",\"Less\":\"BuildControl_Less__3Ttg8\",\"More\":\"BuildControl_More__1MY7B\"};","import React from 'react';\n\nimport classes from './Backdrop.module.css';\n\nconst backdrop = props => props.show ? <div className={classes.Backdrop} onClick={props.click}></div> : null;\n\nexport default backdrop;","import React, { Component } from 'react';\n\nimport classes from './Modal.module.css';\nimport Aux from './../../../hoc/Aux/Aux';\nimport Backdrop from './../Backdrop/Backdrop';\n\nclass Modal extends Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\n    }\n\n    render() {\n        const modalClasses = [classes.Modal];\n\t\tif (this.props.show) {\n\t\t\tmodalClasses.push(classes.Show);\n\t\t} else {\n\t\t\tmodalClasses.push(classes.Hide);\n        }\n\n        return (\n            <Aux>\n                <div className={modalClasses.join(' ')}>\n                    {this.props.children}\n                </div>\n                <Backdrop show={this.props.show} click={this.props.closeModal} />\n            </Aux>\n        );\n    }\n}\n\nexport default Modal;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__ApScI\",\"Logo\":\"Toolbar_Logo__3Lk47\",\"Toggler\":\"Toolbar_Toggler__1M-Kj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__1-5dN\",\"Show\":\"Modal_Show__IzXZM\",\"Hide\":\"Modal_Hide__j6BYH\"};","import React from 'react';\n\nimport classes from './Button.module.css';\n\nconst button = props => (\n\t<button\n        disabled={props.disabled}\n\t\tonClick={props.click}\n\t\tclassName={[classes.Button, classes[props.btnType]].join(' ')}>\n\t\t{props.children}\n\t</button>\n);\n\nexport default button;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavItem\":\"NavigationItem_NavItem__2wWj-\",\"active\":\"NavigationItem_active__2v2td\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__1YmbS\",\"OrderButton\":\"BuildControls_OrderButton___M-Du\",\"enable\":\"BuildControls_enable__9xLsD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3gFiX\",\"Success\":\"Button_Success__2Rka1\",\"Danger\":\"Button_Danger__2ogZq\"};","import React, { Component } from 'react';\n\nimport Aux from './../Aux/Aux';\nimport Modal from './../../components/UI/Modal/Modal';\n\nconst withErrorHandler = (WrappedComponent, axios) => {\n    return class extends Component {\n        state = {\n            error: null\n        }\n\n        componentWillMount() {\n            this.reqInterceptor = axios.interceptors.request.use(req => {\n                this.setState({ error: null });\n                return req;\n            });\n            this.resInterceptor = axios.interceptors.response.use(req => req, error => {\n                this.setState({ error });\n            });\n        }\n\n        componentWillUnmount() {\n            axios.interceptors.request.eject(this.reqInterceptor);\n            axios.interceptors.response.eject(this.resInterceptor);\n        }\n\n        errorConfirmHandler = () => this.setState({ error: null });\n\n        render() {\n            return (\n\t\t\t\t<Aux>\n\t\t\t\t\t<Modal\n\t\t\t\t\t\tshow={this.state.error}\n\t\t\t\t\t\tcloseModal={this.errorConfirmHandler}>\n\t\t\t\t\t\t{this.state.error ? this.state.error.message : null}\n\t\t\t\t\t</Modal>\n\t\t\t\t\t<WrappedComponent {...this.props} />\n\t\t\t\t</Aux>\n\t\t\t);\n        }\n    }\n};\n\nexport default withErrorHandler;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport classes from './BurgerIngredient.module.css';\n\nconst burgerIngredient = props => {\n    let ingredient = null;\n\n    switch (props.type) {\n        case ('bread-bottom'):\n            ingredient = <div className={classes.BreadBottom}></div>;\n            break;\n        case ('bread-top'):\n            ingredient = (\n                <div className={classes.BreadTop}>\n                    <div className={classes.Seeds1}></div>\n                    <div className={classes.Seeds2}></div>\n                </div>\n            );\n            break;\n        case ('meat'):\n            ingredient = <div className={classes.Meat}></div>;\n            break;\n        case ('cheese'):\n            ingredient = <div className={classes.Cheese}></div>;\n            break;\n        case ('salad'):\n            ingredient = <div className={classes.Salad}></div>;\n            break;\n        case ('bacon'):\n            ingredient = <div className={classes.Bacon}></div>;\n            break;\n        default:\n            ingredient = null;\n    }\n\n    return ingredient;\n};\n\nburgerIngredient.propTypes = {\n    type: PropTypes.string.isRequired\n}\n\nexport default burgerIngredient;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport classes from './Burger.module.css';\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\n\nconst burger = props => {\n    const ingredientsArray = Object.keys(props.ingredients);\n    let ingredients = ingredientsArray\n\t\t.map(ingredient => {\n            if (ingredient !== 'price') {\n                return [...Array(props.ingredients[ingredient])].map((_, i) => {\n                    return <BurgerIngredient key={ingredient + i} type={ingredient} />\n                });\n            }\n            return ingredient;\n\t\t})\n        .reduce((arr, el) => arr.concat(el), []);\n\n    if (ingredients.length === 0) {\n        ingredients = <p>Please start adding ingredients!</p>;\n    }\n\n    return (\n        <div className={classes.Burger}>\n            <BurgerIngredient type=\"bread-top\" />\n            {ingredients}\n            <BurgerIngredient type=\"bread-bottom\" />\n        </div>\n    );\n};\n\nburger.propTypes = {\n    ingredients: PropTypes.object\n};\n\nexport default burger;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__3H3X8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toggler\":\"Toggler_Toggler__1FiVr\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__1N0xH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__1fnFX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3j6VK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__10T8F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__1twK-\",\"load6\":\"Spinner_load6__1_74m\",\"round\":\"Spinner_round__3G_CY\"};","import * as actionTypes from '../actions/actionTypes';\n\nconst initialState = {\n    ingredients: null,\n    totalPrice: 4.99,\n    error: false,\n    building: false\n};\n\nconst INGREDIENTS_PRICES = {\n\tsalad: 0.3,\n\tbacon: 0.7,\n\tcheese: 0.5,\n\tmeat: 1.3,\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.SET_INGREDIENTS:\n            return {\n                ...state,\n                // ingredients: action.ingredients // Unordered ingredients\n                ingredients: {\n                    salad: action.ingredients.salad,\n                    bacon: action.ingredients.bacon,\n                    cheese: action.ingredients.cheese,\n                    meat: action.ingredients.meat\n                },\n                totalPrice: 4.99,\n                error: false,\n                building: false\n            }\n        case actionTypes.FETCH_INGREDIENTS_FAILED:\n            return {\n                ...state,\n                error: true\n            }\n        case actionTypes.ADD_INGREDIENT:\n            return {\n                ...state,\n                ingredients: {\n                    ...state.ingredients,\n                    [action.ingredientName]: state.ingredients[action.ingredientName] + 1\n                },\n                totalPrice: state.totalPrice + INGREDIENTS_PRICES[action.ingredientName],\n                building: true\n            }\n        case actionTypes.REMOVE_INGREDIENT:\n            return {\n                ...state,\n                ingredients: {\n                    ...state.ingredients,\n                    [action.ingredientName]: state.ingredients[action.ingredientName] - 1\n                },\n                totalPrice: state.totalPrice - INGREDIENTS_PRICES[action.ingredientName],\n                building: true\n            }\n        default:\n            return state;\n    }\n};\n\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\n\nconst initialState = {\n    orders: [],\n    loading: false,\n    purchased: false\n};\n\nconst orderReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.PURCHASE_BURGER_INIT:\n            return {\n                ...state,\n                purchased: false\n            };\n        case actionTypes.PURCHASE_BURGER_START:\n            return {\n                ...state,\n                loading: true\n            }\n        case actionTypes.PURCHASE_BURGER_SUCCESS:\n            const newOrder = {\n                id: action.id,\n                ...action.orderData\n            };\n            return {\n                ...state,\n                orders: state.orders.concat(newOrder),\n                loading: false,\n                purchased: true\n            };\n        case actionTypes.PURCHASE_BURGER_FAIL:\n            return {\n                ...state,\n                loading: false\n            };\n        case actionTypes.FETCH_ORDERS_START:\n            return {\n                ...state,\n                loading: true\n            };\n        case actionTypes.FETCH_ORDERS_SUCCESS:\n            return {\n                ...state,\n                orders: action.orders,\n                loading: false\n            };\n        case actionTypes.FETCH_ORDERS_FAIL:\n            return {\n                ...state,\n                loading: false\n            };\n        default:\n            return state;\n    }\n};\n\nexport default orderReducer;","import * as actionTypes from '../actions/actionTypes';\n\nconst initialState = {\n    token: null,\n    userId: null,\n    error: null,\n    loading: false,\n    redirectPath: '/'\n};\n\nconst authStart = (state, action) => {\n    return {\n        ...state,\n        error: null,\n        loading: true\n    };\n};\n\nconst authSuccess = (state, action) => {\n    return {\n        ...state,\n        token: action.authData.idToken,\n        userId: action.authData.localId,\n        error: null,\n        loading: false\n    };\n};\n\nconst authFail = (state, action) => {\n    return {\n        ...state,\n        error: action.error,\n        loading: false\n    };\n};\n\nconst authLogout = (state, action) => {\n    return {\n        ...state,\n        token: null,\n        userId: null,\n        error: null,\n        loading: false\n    };\n};\n\nconst authSetRedirectPath = (state, action) => {\n    return {\n        ...state,\n        redirectPath: action.path\n    };\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.AUTH_START: return authStart(state, action);\n        case actionTypes.AUTH_SUCCESS: return authSuccess(state, action);\n        case actionTypes.AUTH_FAIL: return authFail(state, action);\n        case actionTypes.AUTH_LOGOUT: return authLogout(state, action);\n        case actionTypes.AUTH_SET_REDIRECT_PATH: return authSetRedirectPath(state, action);\n        default: return state;\n    }\n};\n\nexport default reducer;","import React from 'react';\n\nimport classes from './Toggler.module.css';\n\nconst toggler = props => (\n    <div className={classes.Toggler} onClick={props.click}>\n        <span></span>\n        <span></span>\n        <span></span>\n    </div>\n);\n\nexport default toggler;","import React from 'react';\n\nimport burgerLogo from './../../assets/images/burger-logo.png';\nimport classes from './Logo.module.css';\n\nconst logo = props => (\n    <div className={classes.Logo}>\n        <img src={burgerLogo} alt=\"MyBurger\" />\n    </div>\n);\n\nexport default logo;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport classes from './NavigationItem.module.css';\n\nconst navigationItem = props => (\n    <li className={classes.NavItem}>\n        <NavLink\n            to={props.link}\n            activeClassName={classes.active}\n            exact={props.exact}>{props.children}</NavLink>\n    </li>\n);\n\nexport default navigationItem;","import React from 'react';\n\nimport classes from './NavigationItems.module.css';\nimport NavigationItem from './NavigationItem/NavigationItem';\n\nconst navigationItems = props => {\n    let authLink = <NavigationItem link=\"/auth\">Authenticate</NavigationItem>;\n    let ordersLink = null;\n    if (props.isAuth) {\n        ordersLink = <NavigationItem link=\"/orders\">My Orders</NavigationItem>;\n        authLink = <NavigationItem link=\"/logout\">Logout</NavigationItem>;\n    }\n\n    return (\n        <ul className={classes.NavigationItems}>\n            <NavigationItem link=\"/\" exact>Burger Builder</NavigationItem>\n            {ordersLink}\n            {authLink}\n        </ul>\n    );\n}\n\nexport default navigationItems;","import React from 'react';\n\nimport classes from './Toolbar.module.css';\nimport Toggler from './Toggler/Toggler';\nimport Logo from './../../Logo/Logo';\nimport NavigationItems from './../NavigationItems/NavigationItems';\n\nconst toolbar = props => (\n\t<header className={classes.Toolbar}>\n\t\t<div className={classes.Toggler}>\n\t\t\t<Toggler click={props.toggleSideDrawer} />\n\t\t</div>\n\t\t<div className={classes.Logo}>\n\t\t\t<Logo />\n\t\t</div>\n\t\t<nav>\n\t\t\t<NavigationItems isAuth={props.isAuth} />\n\t\t</nav>\n\t</header>\n);\n\nexport default toolbar;","import React from 'react';\n\nimport classes from './SideDrawer.module.css';\nimport Logo from './../../Logo/Logo';\nimport Aux from './../../../hoc/Aux/Aux';\nimport NavigationItems from './../NavigationItems/NavigationItems';\nimport Backdrop from './../../UI/Backdrop/Backdrop';\n\nconst sideDrawer = props => {\n    const sideDrawerClasses = [classes.SideDrawer];\n    if (props.showBackdrop) {\n        sideDrawerClasses.push(classes.Open);\n    } else {\n        sideDrawerClasses.push(classes.Close);\n    }\n\n    return (\n\t\t<Aux>\n            <Backdrop show={props.showBackdrop} click={props.toggleSideDrawer} />\n\t\t\t<div className={sideDrawerClasses.join(' ')} onClick={props.toggleSideDrawer}>\n\t\t\t\t<div className={classes.Logo}>\n\t\t\t\t\t<Logo />\n\t\t\t\t</div>\n\t\t\t\t<nav>\n\t\t\t\t\t<NavigationItems isAuth={props.isAuth} />\n\t\t\t\t</nav>\n\t\t\t</div>\n\t\t</Aux>\n\t);\n};\n\nexport default sideDrawer;","import React, { Component } from 'react';\n\n// Redux\nimport { connect } from 'react-redux';\n\nimport classes from './Layout.module.css';\nimport Aux from '../Aux/Aux';\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\n\nclass Layout extends Component {\n    state = {\n        showSideDrawer: false\n    }\n\n    toggleSideDrawerHandler = () => {\n        this.setState(prevState => {\n            return {\n                showSideDrawer: !prevState.showSideDrawer\n            }\n        });\n    }\n\n    render() {\n        return (\n\t\t\t<Aux>\n\t\t\t\t<Toolbar\n                    isAuth={this.props.isAuth}\n                    toggleSideDrawer={this.toggleSideDrawerHandler} />\n\t\t\t\t<SideDrawer\n                    isAuth={this.props.isAuth}\n                    showBackdrop={this.state.showSideDrawer}\n                    toggleSideDrawer={this.toggleSideDrawerHandler} />\n\t\t\t\t<main className={classes.Content}>{this.props.children}</main>\n\t\t\t</Aux>\n\t\t);\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuth: state.auth.token !== null\n    };\n};\n\nexport default connect(mapStateToProps)(Layout);","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport classes from './BuildControl.module.css';\n\nconst buildControl = props => (\n    <div className={classes.BuildControl}>\n        <div className={classes.Label}>{props.label}</div>\n        <button className={classes.Less} onClick={props.remove} disabled={props.disabled}>Less</button>\n        <button className={classes.More} onClick={props.add}>More</button>\n    </div>\n);\n\nbuildControl.propTypes = {\n    label: PropTypes.string\n};\n\nexport default buildControl;","import React from 'react';\n\nimport classes from './BuildControls.module.css';\nimport BuildControl from './BuildControl/BuildControl';\n\nconst controls = [\n    { label: 'Salad', type: 'salad' },\n    { label: 'Bacon', type: 'bacon' },\n    { label: 'Cheese', type: 'cheese' },\n    { label: 'Meat', type: 'meat' },\n];\n\nconst buildControls = props => (\n    <div className={classes.BuildControls}>\n        <p>Current price: <b>$ {props.price.toFixed(2)}</b></p>\n        {controls.map(ctrl => (\n            <BuildControl\n                key={ctrl.label}\n                label={ctrl.label}\n                add={() => props.addIngredient(ctrl.type)}\n                remove={() => props.removeIngredient(ctrl.type)}\n                disabled={props.disabled[ctrl.type]} />\n        ))}\n        <button\n            className={classes.OrderButton}\n            onClick={props.orderNow}\n            disabled={!props.purchasable}>{props.isAuth ? 'ORDER NOW' : 'SIGN UP TO ORDER'}</button>\n    </div>\n);\n\nexport default buildControls;\n","import React from 'react';\n\nimport Aux from './../../../../hoc/Aux/Aux';\nimport Button from './../../../UI/Button/Button';\n\nconst orderSummary = props => {\n    const ingredientsSummary = Object.keys(props.ingredients).map(ing => (\n\t\t<li key={ing}>\n\t\t\t<span>{ing}:</span> {props.ingredients[ing]}\n\t\t</li>\n\t));\n\n    return (\n        <Aux>\n            <h3>Your order</h3>\n            <p>A delicious burger with the following ingredients:</p>\n            <ul>\n                {ingredientsSummary}\n            </ul>\n            <b>Total price: $ {props.price.toFixed(2)}</b>\n            <p>Proceed to checkout?</p>\n            <Button btnType=\"Danger\" click={props.cancelPurchase}>CANCEL</Button>\n            <Button btnType=\"Success\" click={props.continuePurchase}>CONTINUE</Button>\n        </Aux>\n    );\n};\n\nexport default orderSummary;","import React, { Component } from 'react';\nimport axios from '../../axios-orders';\n\n// Redux\nimport { connect } from 'react-redux';\nimport * as actions from '../../store/actions/index';\n\n// Components\nimport withErrorHandler from './../../hoc/withErrorHandler/withErrorHandler';\nimport Aux from './../../hoc/Aux/Aux';\nimport Burger from './../../components/Burger/Burger';\nimport BuildControls from './../../components/Burger/BuildControls/BuildControls';\nimport Modal from './../../components/UI/Modal/Modal';\nimport OrderSummary from './../../components/Burger/Order/OrderSummary/OrderSummary';\nimport Spinner from './../../components/UI/Spinner/Spinner';\n\nexport class BurgerBuilder extends Component {\n\tstate = {\n        purchasing: false\n    };\n\n    componentDidMount() {\n        this.props.onInitIngredients();\n    }\n\n\tupdatePurchasableState(ingredients) {\n\t\tconst sum = Object.keys(ingredients) // ['salad', 'bacon', 'cheese', 'meat']\n\t\t\t.map(ing => ingredients[ing]) // [0, 0, 0, 0]\n\t\t\t.reduce((sum, el) => sum + el, 0); // [0]\n\t\treturn sum > 0;\n\t}\n\n\tpurchaseHandler = () => {\n        if (this.props.isAuth) {\n            this.setState({ purchasing: true });\n        } else {\n            this.props.onSetAuthRedirectPath('/checkout');\n            this.props.history.push('/auth');\n        }\n    }\n\n    purchaseCancelHandler = () => this.setState({ purchasing: false })\n\n    purchaseContinueHandler = () => {\n        this.props.onInitPurchase();\n        this.props.history.push('/checkout');\n    };\n\n\trender() {\n\t\tconst ingredients = { ...this.props.ingredients };\n\t\tfor (const key in ingredients) {\n\t\t\tingredients[key] = ingredients[key] <= 0; // True if < or = 0, false if > 0\n        }\n\n        let orderSummary = null;\n        let burgerAndBuildControls = <Spinner />;\n\n        if (this.props.error) {\n            burgerAndBuildControls = <p>Something went wrong!</p>;\n        }\n        if (this.props.ingredients) {\n            burgerAndBuildControls = (\n\t\t\t\t<Aux>\n\t\t\t\t\t<Burger ingredients={this.props.ingredients} />\n\t\t\t\t\t<BuildControls\n\t\t\t\t\t\tprice={this.props.totalPrice}\n\t\t\t\t\t\taddIngredient={this.props.onIngredientAdded}\n\t\t\t\t\t\tremoveIngredient={this.props.onIngredientRemoved}\n\t\t\t\t\t\tdisabled={ingredients}\n                        orderNow={this.purchaseHandler}\n                        isAuth={this.props.isAuth}\n\t\t\t\t\t\tpurchasable={this.updatePurchasableState(this.props.ingredients)} />\n\t\t\t\t</Aux>\n            );\n            orderSummary = (\n\t\t\t\t<OrderSummary\n\t\t\t\t\tcancelPurchase={this.purchaseCancelHandler}\n\t\t\t\t\tcontinuePurchase={this.purchaseContinueHandler}\n\t\t\t\t\tprice={this.props.totalPrice}\n\t\t\t\t\tingredients={this.props.ingredients} />\n\t\t\t);\n        }\n\n\t\treturn (\n\t\t\t<Aux>\n\t\t\t\t<Modal\n\t\t\t\t\tshow={this.state.purchasing}\n\t\t\t\t\tcloseModal={this.purchaseCancelHandler}>\n\t\t\t\t\t{orderSummary}\n\t\t\t\t</Modal>\n                {burgerAndBuildControls}\n\t\t\t</Aux>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = state => {\n    return {\n        ingredients: state.burgerBuilder.ingredients,\n        totalPrice: state.burgerBuilder.totalPrice,\n        error: state.burgerBuilder.error,\n        isAuth: state.auth.token !== null\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onIngredientAdded: ingredientName => dispatch(actions.addIngredient(ingredientName)),\n        onIngredientRemoved: ingredientName => dispatch(actions.removeIngredient(ingredientName)),\n        onInitIngredients: () => dispatch(actions.getIngredients()),\n        onInitPurchase: () => dispatch(actions.purchaseBurgerInit()),\n        onSetAuthRedirectPath: path => dispatch(actions.authSetRedirectPath(path))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\n\n// Redux\nimport { connect } from 'react-redux';\nimport * as actions from '../../../store/actions/index';\n\nclass Logout extends Component {\n    componentDidMount() {\n        this.props.onLogout();\n    }\n\n    render() {\n        return <Redirect to=\"/\" />\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onLogout: () => dispatch(actions.logout())\n    };\n};\n\nexport default connect(null, mapDispatchToProps)(Logout);","import React, { Component, Suspense } from 'react';\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom';\n\n// Redux\nimport { connect } from 'react-redux';\nimport * as actions from './store/actions/index';\n\n// Components\nimport Layout from './hoc/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\nimport Logout from './containers/Auth/Logout/Logout';\nimport Spinner from './components/UI/Spinner/Spinner';\nconst LazyCheckout = React.lazy(() => import('./containers/Checkout/Checkout'));\nconst LazyOrders = React.lazy(() => import('./containers/Orders/Orders'));\nconst LazyAuth = React.lazy(() => import('./containers/Auth/Auth'));\n\nconst Checkout = () => (\n    <Suspense fallback={<Spinner />}>\n        <LazyCheckout />\n    </Suspense>\n);\nconst Orders = () => (\n    <Suspense fallback={<Spinner />}>\n        <LazyOrders />\n    </Suspense>\n);\nconst Auth = () => (\n    <Suspense fallback={<Spinner />}>\n        <LazyAuth />\n    </Suspense>\n);\n\nclass App extends Component {\n    componentDidMount() {\n        this.props.onTryAutoSignup();\n    }\n\n    render() {\n        let routes = (\n\t\t\t<Switch>\n\t\t\t\t<Route path=\"/auth\" render={Auth} />\n\t\t\t\t<Route path=\"/\" component={BurgerBuilder} />\n\t\t\t\t<Redirect to=\"/\" />\n\t\t\t</Switch>\n\t\t);\n        if (this.props.isAuth) {\n            routes = (\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route path=\"/checkout\" render={Checkout} />\n\t\t\t\t\t<Route path=\"/orders\" render={Orders} />\n\t\t\t\t\t<Route path=\"/logout\" component={Logout} />\n\t\t\t\t\t<Route path=\"/auth\" render={Auth} />\n\t\t\t\t\t<Route path=\"/\" component={BurgerBuilder} />\n\t\t\t\t\t<Redirect to=\"/\" />\n\t\t\t\t</Switch>\n\t\t\t);\n        }\n\n        return (\n            <Layout>\n                {routes}\n            </Layout>\n\t\t);\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuth: state.auth.token !== null\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onTryAutoSignup: () => dispatch(actions.checkAuthState())\n    };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\n// Redux\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport burgerBuilderReducer from './store/reducers/burgerBuilder';\nimport orderReducer from './store/reducers/order';\nimport authReducer from './store/reducers/auth';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst composeEnhancers = process.env.NODE_ENV === 'development' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null || compose;\n\nconst rootReducer = combineReducers({\n    burgerBuilder: burgerBuilderReducer,\n    order: orderReducer,\n    auth: authReducer\n});\n\nconst store = createStore(rootReducer, composeEnhancers(\n    applyMiddleware(thunk)\n));\n\nconst app = (\n\t<Provider store={store}>\n\t\t<React.StrictMode>\n\t\t\t<BrowserRouter>\n\t\t\t\t<App />\n\t\t\t</BrowserRouter>\n\t\t</React.StrictMode>\n\t</Provider>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}